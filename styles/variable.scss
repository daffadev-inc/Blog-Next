$metamask: url('/icons/metamask.svg');
$walletconnect: url('/icons/walletconnect.svg');
$coinbase: url('/icons/coinbase.svg');
$polygon: url('/icons/polygon.png');
$ftm: url('/icons/ftm.png');
$avatar: url('/avatar.png');

// Mobile breakpoints
@mixin mobile {
  @media (min-width: 320px) and (max-width: 767.98px) {
    @content;
  }
}

.loadingOrError {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%,-50%);
  font: 14px arial;
  border-radius: 30%;
  overflow: hidden;
}

.hidden {
    display: none !important;
}

.mobile_only {
    display: none;
    @include mobile{
        display: block !important;
    }
}

.desktop_only {
    display: block;
    @include mobile {
        display: none !important;
    }
}


.spinner {
  border: 6px solid rgb(0 0 0 / 10%);
  border-radius: 50%;
  border-top: 6px solid rgba(255, 255, 255, 0.3);
  width: 40px;
  height: 40px;
  -webkit-animation: spin 1s linear infinite; /* Safari */
  animation: spin 1s linear infinite;
}

/* Safari */
@-webkit-keyframes spin {
  0% { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.cell {
  width: 100%;
  height: 100%;
  // border: 1px solid #fff1;
  z-index: 2;
}

@for $i from 0 to 15 {
  .cell:nth-child(15n + #{$i + 1}):hover ~ .content {
    --positionX: #{$i};
  }
  .cell:nth-child(n + #{15 * $i + 1}):nth-child(-n + #{15 * ($i + 1)}):hover ~ .content {
    --positionY: #{$i};
  }
}

.content {
  --positionX: 7;
  --positionY: 7;

  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.textHighlight {
  font-family: 'Fredoka One', cursive;
  top: 50%; left: 50%;
  animation: color 3s infinite linear;
  text-shadow: 0 0 10px #000a;
  transition: all 0.5s;

  @for $i from 0 to 10 {
    &:nth-child(#{$i + 1}) {
      font-size: #{2.5}rem;
      animation-delay: #{$i * -0.3}s;
      transform:
        translateX(calc(-50% - (var(--positionX) - 7) * #{(7 - $i) * 3px}))
        translateY(calc(-50% - (var(--positionY) - 7) * #{(7 - $i) * 3px}))
        rotateX(calc(0deg - (var(--positionY) - 7) * 5deg))
        rotateY(calc((var(--positionX) - 7) * 5deg));
@include mobile {
      font-size: #{1.8}rem;}
    }
  }

  @keyframes color {
    @for $c from 0 through 10 {
      #{$c * 10%} { color: hsl(36 * $c, 75%, 75%); }
    }
  }
}
